 🏗️ SuperConfig V2 - Complete System Architecture

  ┌────────────────────────────────────────────────────────────────────────────┐
  │                           USER APPLICATION LAYER                           │
  ├────────────────────────────────────────────────────────────────────────────┤
  │  let config = ConfigBuilder::new()                                         │
  │      .enable(ConfigFlags::SIMD | ConfigFlags::ARRAY_MERGE)                 │
  │      .with_file("config.toml")                                             │
  │      .with_env("APP")                                                      │
  │      .build()?;  // Returns ConfigHandle<MyConfig>                         │
  │                                                                            │
  │  let data = config.read()?;  // Returns Arc<MyConfig> - zero copy!         │
  │  println!("Host: {}", data.database.host);  // Direct field access         │
  └────────────────────────────────────────────────────────────────────────────┘
                                         │
                                         ▼
  ┌────────────────────────────────────────────────────────────────────────────┐
  │                            PHASE 3: API LAYER                              │
  ├────────────────────────────────────────────────────────────────────────────┤
  │                                                                            │
  │  ┌─────────────────┐    ┌──────────────────┐    ┌─────────────────────┐    │
  │  │  ConfigBuilder  │    │  ConfigFlags     │    │   LoadOptions       │    │
  │  │                 │    │                  │    │                     │    │
  │  │ .enable()       │    │ ARRAY_MERGE: u64 │    │ merge_strategy      │    │
  │  │ .disable()      │    │ SIMD: u64        │    │ timeout_ms          │    │
  │  │ .with_file()    │    │ PROFILING: u64   │    │ cache_behavior      │    │
  │  │ .with_env()     │    │ STRICT_MODE: u64 │    │ validate_schema     │    │
  │  │ .build()        │    │ ... (10 flags)   │    │                     │    │
  │  └─────────────────┘    └──────────────────┘    └─────────────────────┘    │
  │                                                                            │
  └────────────────────────────────────────────────────────────────────────────┘
                                         │
                                         ▼
  ┌────────────────────────────────────────────────────────────────────────────┐
  │                       PHASE 2: CONFIGURATION ENGINE                        │
  ├────────────────────────────────────────────────────────────────────────────┤
  │                                                                            │
  │  ┌─────────────────┐    ┌──────────────────┐    ┌─────────────────────┐    │
  │  │ ConfigSources   │    │   Providers      │    │   Parsing Engine    │    │
  │  │                 │    │                  │    │                     │    │
  │  │ • File          │    │ • FileProvider   │    │ • JSON (+ SIMD)     │    │
  │  │ • Environment   │    │ • EnvProvider    │    │ • TOML              │    │
  │  │ • Directory     │    │ • HierProvider   │    │ • YAML              │    │
  │  │ • Glob          │    │ • GlobProvider   │    │ • ENV (nested)      │    │
  │  │ • Hierarchical  │    │                  │    │ • INI, RON, JSON5   │    │
  │  └─────────────────┘    └──────────────────┘    └─────────────────────┘    │
  │                                                                            │
  │  ┌─────────────────┐    ┌──────────────────┐    ┌─────────────────────┐    │
  │  │ File Cache      │    │  Format Detection│    │   Array Merging     │    │
  │  │                 │    │                  │    │                     │    │
  │  │ • mtime-based   │    │ • Extension      │    │ • _ADD operations   │    │
  │  │ • memory-mapped │    │ • Content        │    │ • _REMOVE ops       │    │
  │  │ • LRU eviction  │    │ • Priority       │    │ • Deep merging      │    │
  │  │                 │    │   (TOML > JSON)  │    │                     │    │
  │  └─────────────────┘    └──────────────────┘    └─────────────────────┘    │
  │                                                                            │
  └────────────────────────────────────────────────────────────────────────────┘
                                         │
                                         ▼
  ┌───────────────────────────────────────────────────────────────────────────┐
  │                      PHASE 1: CORE REGISTRY SYSTEM                        │
  ├───────────────────────────────────────────────────────────────────────────┤
  │                                                                           │
  │  ┌───────────────────────────────────────────────────────────────────┐    │
  │  │                     ConfigRegistry                                │    │
  │  │                                                                   │    │
  │  │  ┌─────────────────┐    ┌──────────────────┐                      │    │
  │  │  │   DashMap       │    │    Statistics    │                      │    │
  │  │  │  <HandleId,     │    │                  │                      │    │
  │  │  │   ConfigEntry>  │    │ • total_handles  │                      │    │
  │  │  │                 │    │ • total_reads    │                      │    │
  │  │  │ Lock-free       │    │ • memory_usage   │                      │    │
  │  │  │ Concurrent      │    │ • operation_counts│                     │    │
  │  │  └─────────────────┘    └──────────────────┘                      │    │
  │  │                                                                   │    │
  │  │  ┌─────────────────┐    ┌──────────────────┐                      │    │
  │  │  │  ConfigEntry    │    │   ConfigHandle   │                      │    │
  │  │  │                 │    │                  │                      │    │
  │  │  │ • Arc<T> data   │    │ • HandleId       │                      │    │
  │  │  │ • type_name     │    │ • PhantomData<T> │                      │    │
  │  │  │ • timestamps    │    │                  │                      │    │
  │  │  │ • ref_count     │    │ Type-safe!       │                      │    │
  │  │  └─────────────────┘    └──────────────────┘                      │    │
  │  │                                                                   │    │
  │  │  OPERATIONS: create(), read(), update(), delete()                 │    │
  │  │  PERFORMANCE: 162ns lookup (18x better than 500ns target!)        │    │
  │  └───────────────────────────────────────────────────────────────────┘    │
  │                                                                           │
  └───────────────────────────────────────────────────────────────────────────┘

  🔄 Data Flow Architecture

  User Request: config.read()
  │
  ├─ 1. ConfigHandle<T> contains HandleId
  │
  ├─ 2. Registry.read(handle) → DashMap lookup by HandleId
  │
  ├─ 3. ConfigEntry found → Arc<T> extracted
  │
  ├─ 4. Arc::clone() → Zero-copy reference returned
  │
  └─ 5. User gets Arc<T> → Direct field access (data.database.host)

  Environment Variables: APP__DATABASE__HOST=localhost
  │
  ├─ 1. EnvProvider processes with prefix filtering
  │
  ├─ 2. Strategic underscore parsing: APP_ → prefix, __ → sections
  │
  ├─ 3. Nested structure: database.host = "localhost"
  │
  ├─ 4. JSON Value created with proper nesting
  │
  └─ 5. Merged with other sources → Final configuration