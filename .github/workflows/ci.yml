name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: ["1.86", "stable"]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Moon build system
        uses: ./.github/actions/setup-moon
        with:
          rust-version: ${{ matrix.rust-version }}

      - name: Debug Moon environment
        run: |
          echo "Current directory: $(pwd)"
          echo "Moon version: $(moon --version)"
          echo "Proto version: $(proto --version)"
          echo "Rust version: $(rustc --version)"
          ls -la

      - name: Test Moon basic functionality
        run: |
          moon --version
          moon project list
          
      - name: Run Moon checks (with verbose logging)
        run: moon check --all --log trace

      - name: Run tests (Moon)
        run: moon run :test --query="language=rust"

      - name: Run doc tests (Moon)
        run: moon run :test-doc --query="language=rust"

  lint:
    name: Lint & Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Moon build system
        uses: ./.github/actions/setup-moon

      - name: Check formatting
        run: moon run :fmt-check --query="language=rust"

      - name: Run clippy
        run: moon run :clippy --query="language=rust"

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: ["dev", "release"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Moon build system
        uses: ./.github/actions/setup-moon

      - name: Build with Moon
        run: |
          if [ "${{ matrix.profile }}" = "release" ]; then
            moon run :build --query="language=rust" -- --release
          else
            moon run :build --query="language=rust"
          fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Moon build system
        uses: ./.github/actions/setup-moon

      - name: Install cargo-audit
        run: cargo install --force cargo-audit

      - name: Run security audit
        run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Moon build system
        uses: ./.github/actions/setup-moon

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Generate coverage report
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cobertura.xml
          fail_ci_if_error: false